@startuml
actor Пользователь as user
participant "Форма авторизации (фронт)" as ID_form
participant "Сервис авторизации (бэк)" as ID_service
database    "База данных пользователей"    as db
user ->> ID_form: Ввод логина
user -> ID_form: Нажатие кнопки "Далее"
ID_form-> ID_service: Запрос на проверку логина
ID_service -> db: Проверить существование логина

alt "Пользователь зарегистрирован в системе"
   ID_service <<-- db: Логин существует
   ID_form    <<-- ID_service: Идентификация прошла успешно
   user <<-- ID_form: Отобразить форму для ввода пароля
   user ->> ID_form: Ввод пароля
   opt "Чек-бокс 'отобразить пароль'"
     user ->> ID_form: Нажать на чек-бокс отобразить пароль
     alt "Пароль скрыт"
        user <<-- ID_form: Отображать пароль
     else "Пароль показывается"
        user <<-- ID_form: Скрывать пароль
     end
   end
   user ->> ID_form: Нажатие кнопки "Далее"
   ID_form-> ID_service: Запрос на аутентификацию
   ID_service -> ID_service: Найти хэш пароля
   ID_service -> db: Проверить соответсвие хэшей
   alt "Авторизация успешна"
      ID_service <<-- db: Вернуть информацию о совпадении хэшей и правах пользователя
      ID_service -> ID_service: Генерация JWT
      ID_form    <<-- ID_service: Ответ об успешной авторизации, передача JWT
      user <<-- ID_form: Отобразить страницу в соответсвие с правами доступа
   else "Авторизация не удалась"
      ID_service <<-- db: Вернуть информацию о несовпадении хэшей
      ID_form    <<-- ID_service: Вернуть ошибку аутентификации
      user <<-- ID_form: Отобразить сообщение о неверном пароле
   end
else "Пользователь не зарегистрирован в системе"
   ID_service <<-- db: Логин не существует
   ID_form    <<-- ID_service: Вернуть ошибку идентификации
   user <<-- ID_form: Отобразить ошибку идентификации
end
@enduml
